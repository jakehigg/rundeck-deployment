//# sourceMappingURL=nodeFiltersKOTest.js.map
var NodeFiltersTest=function(){function e(b){return new NodeFilters("","","",b)}var d=this,f=0,g=0,c=function(b,a,c){g++;a!=c?(f++,jQuery(document.body).append(jQuery("<div></div>").append(jQuery('<span class="text-danger"></span>').text("FAIL: "+b+": expected: "+a+", was: "+c)))):jQuery(document.body).append(jQuery("<div></div>").append(jQuery('<span class="text-success"></span>').text("OK: "+b)))};d.singlePageBasicTest=function(b){var a=e({});a.pagingMax(5);a.page(0);a.allcount(5);a.total(5);c(b+
"pageRemaining",0,a.pageRemaining());c(b+"hasMoreNodes",!1,a.hasMoreNodes());c(b+"hasMultiplePages",!1,a.hasMultiplePages())};d.twoPageTest=function(b){var a=e({});a.pagingMax(5);a.page(0);a.allcount(6);a.total(5);c(b+"basic",1,a.pageRemaining());c(b+"hasMoreNodes",!0,a.hasMoreNodes());c(b+"hasMultiplePages",!1,a.hasMultiplePages())};d.multiPageTest=function(b){var a=e({});a.pagingMax(5);a.page(0);a.allcount(20);a.total(5);c(b+"basic",15,a.pageRemaining());c(b+"hasMoreNodes",!0,a.hasMoreNodes());
c(b+"hasMultiplePages",!0,a.hasMultiplePages())};d.defaultNodesTitleTest=function(b){var a=e({});a.allcount(5);c(b+"plural","Nodes",a.nodesTitle());a.allcount(1);c(b+"singular","Node",a.nodesTitle())};d.l18nNodesTitleTest=function(b){var a=e({nodesTitleSingular:"singular",nodesTitlePlural:"plural"});a.allcount(5);c(b+"plural","plural",a.nodesTitle());a.allcount(1);c(b+"singular","singular",a.nodesTitle())};d.namespacesTest=function(b){var a=(new NodeSet({})).attributeNamespaces({"a:b":"c","a.x:z":"d",
"a.x:p":"e","a.z-y:y:abc":"wxy"});c(b+"count",3,a.length);c(b+"[0]: key","a",a[0].ns);c(b+"[0]: values length",1,a[0].values.length);c(b+"[0]: value name","a:b",a[0].values[0].name);c(b+"[0]: value value","c",a[0].values[0].value);c(b+"[0]: value shortName","b",a[0].values[0].shortname);c(b+"[1]: key","a.x",a[1].ns);c(b+"[1]: values length",2,a[1].values.length);c(b+"[1][0]: value name","a.x:p",a[1].values[0].name);c(b+"[1][0]: value value","e",a[1].values[0].value);c(b+"[1][0]: value shortName",
"p",a[1].values[0].shortname);c(b+"[1][1]: value name","a.x:z",a[1].values[1].name);c(b+"[1][1]: value value","d",a[1].values[1].value);c(b+"[1][1]: value shortName","z",a[1].values[1].shortname);c(b+"[2]: key","a.z-y",a[2].ns);c(b+"[2]: values length",1,a[2].values.length);c(b+"[2][0]: value name","a.z-y:y:abc",a[2].values[0].name);c(b+"[2][0]: value value","wxy",a[2].values[0].value);c(b+"[2][0]: value shortName","y:abc",a[2].values[0].shortname)};d.testAll=function(){c("Start: nodeFiltersKOTest.js",
1,1);for(var b in d)if(b.endsWith("Test"))try{d[b].call(d,b+": ")}catch(a){c(b+": error",null,a)}0<f&&jQuery(document.body).prepend(jQuery("<div></div>").append(jQuery('<span class="text-danger"></span>').text("FAIL: "+f+"/"+g+" assertions failed")))}};jQuery(function(){(new NodeFiltersTest).testAll()});